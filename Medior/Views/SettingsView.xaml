<UserControl x:Class="Medior.Views.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:models="clr-namespace:Medior.Models"
             xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:c="clr-namespace:Medior.Controls"
             xmlns:local="clr-namespace:Medior.Views"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             mc:Ignorable="d" 
             xmlns:vm="clr-namespace:Medior.ViewModels"
             DataContext="{x:Static vm:ViewModelLocator.SettingsViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <StackPanel>
        <TextBlock Style="{StaticResource LargeTitle}">
            Settings
        </TextBlock>

        <Label>
            Settings File
        </Label>
        <c:GridEx ColumnDefinitionsEx="*, Auto" Margin="0,0,0,10">
            <TextBox Grid.Column="0" Text="{Binding SettingsFilePath, Mode=OneWay}" IsReadOnly="True" />
            <Button Grid.Column="1" Margin="5,0,0,0" Command="{Binding ChangeSettingsFilePathCommand}">
                Change
            </Button>
        </c:GridEx>

        <Label>
            Server URL
        </Label>
        <TextBox Text="{Binding ServerUri, Mode=TwoWay}" Margin="0,0,0,10" />

        <Label>
            App Theme
        </Label>
        <StackPanel Margin="0,0,0,10">
            <RadioButton
                GroupName="AppTheme"
                Content="System Default"
                IsChecked="{Binding Theme, Mode=OneWay, Converter={StaticResource ValueEqualsParameterBoolConverter}, ConverterParameter={x:Static models:AppTheme.Default}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding SetThemeCommand}" CommandParameter="{x:Static models:AppTheme.Default}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </RadioButton>
            <RadioButton
                GroupName="AppTheme"
                Content="Light"
                Margin="0,5,0,0"
                IsChecked="{Binding Theme, Mode=OneWay, Converter={StaticResource ValueEqualsParameterBoolConverter}, ConverterParameter={x:Static models:AppTheme.Light}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding SetThemeCommand}" CommandParameter="{x:Static models:AppTheme.Light}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </RadioButton>
            <RadioButton
                GroupName="AppTheme"
                Content="Dark"
                Margin="0,5,0,0"
                IsChecked="{Binding Theme, Mode=OneWay, Converter={StaticResource ValueEqualsParameterBoolConverter}, ConverterParameter={x:Static models:AppTheme.Dark}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding SetThemeCommand}" CommandParameter="{x:Static models:AppTheme.Dark}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </RadioButton>
        </StackPanel>

        <mah:ToggleSwitch Margin="0,10,0,10" IsOn="{Binding StartAtLogon, Mode=TwoWay}">
            Start at logon
        </mah:ToggleSwitch>

        <mah:ToggleSwitch Margin="0,0,0,10" IsOn="{Binding HandlePrintScreen, Mode=TwoWay}">
            Handle PrintScreen
        </mah:ToggleSwitch>
    </StackPanel>
</UserControl>
